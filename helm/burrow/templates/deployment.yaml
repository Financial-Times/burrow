apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }} 
  labels:
    chart: "{{ .Chart.Name | trunc 63 }}"
    chartVersion: "{{ .Chart.Version | trunc 63 }}" 
    visualize: "true" 
    app: {{ .Values.service.name }} 
spec:
  replicas: {{ .Values.replicaCount }} 
  selector: 
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true" 
    spec:
      initContainers:
      - name: waitforkafka
        image: "alpine:3.7"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ['/bin/sh','-c',
        'apk update; apk add netcat-openbsd
        i=0;
        while [ $i -lt 120 ]; do
          nc -zw 5 kafka-0.kafka.default.svc.cluster.local 9092 && break;
          let i=i+5;
        done']
      containers:
      - name: {{ .Values.service.name }} 
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env: 
        - name: ZOOKEEPER_HOST 
          valueFrom: 
            configMapKeyRef: 
              name: global-config 
              key: zookeeper.host
        - name: ZOOKEEPER_PORT
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: zookeeper.port
        - name: KAFKA_HOST
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: kafka.host
        - name: KAFKA_PORT
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: kafka.port
        ports: 
        - containerPort: 8080 
        livenessProbe: 
          tcpSocket: 
            port: 8080 
          initialDelaySeconds: 5
        resources: 
{{ toYaml .Values.resources | indent 12 }}

